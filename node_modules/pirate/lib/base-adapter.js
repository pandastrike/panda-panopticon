// Generated by CoffeeScript 1.6.3
(function() {
  var BaseAdapter, BaseCollection, merge, type, _ref;

  _ref = require("fairmont"), type = _ref.type, merge = _ref.merge;

  BaseAdapter = (function() {
    function BaseAdapter(configuration) {
      this.configuration = configuration;
      this.events = this.configuration.events;
      if ((this.configuration.log != null) && type(this.configuration.log) === "function") {
        this.log = function(msg) {
          return this.configuration.log(msg);
        };
      } else if ((this.configuration.log == null) || this.configuration.log === true) {
        this.log = function(msg) {
          return console.log(msg);
        };
      } else {
        this.log = function() {};
      }
    }

    return BaseAdapter;

  })();

  BaseCollection = (function() {
    function BaseCollection() {}

    BaseCollection.prototype.patch = function(key, object) {
      var _this = this;
      return this.events.source(function(events) {
        var _events;
        _events = _this.get(key);
        _events.on("success", function(data) {
          var __events;
          if (data != null) {
            if (type(data) === "array") {
              if (type(object) === "array") {
                data = data.concat(object);
              } else {
                data.push(object);
              }
            } else if (type(data) === "object") {
              data = merge(data, object);
            }
          }
          __events = _this.put(key, data);
          __events.on("success", function(data) {
            return events.emit("success", data);
          });
          return __events.on("error", function(err) {
            return events.emit("error", err);
          });
        });
        return _events.on("error", function(err) {
          return events.emit("error", err);
        });
      });
    };

    return BaseCollection;

  })();

  module.exports = {
    BaseAdapter: BaseAdapter,
    BaseCollection: BaseCollection
  };

}).call(this);
