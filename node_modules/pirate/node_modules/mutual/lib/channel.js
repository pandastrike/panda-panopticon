// Generated by CoffeeScript 1.7.1
(function() {
  var Channel;

  Channel = (function() {
    function Channel() {
      this.handlers = [];
    }

    Channel.prototype.send = function(message) {
      return setImmediate((function(_this) {
        return function() {
          return _this.fire(message);
        };
      })(this));
    };

    Channel.prototype.fire = function(message) {
      var handler, _i, _len, _ref, _results;
      this["package"](message);
      _ref = this.handlers;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        handler = _ref[_i];
        _results.push(handler(message));
      }
      return _results;
    };

    Channel.prototype.receive = function(handler) {
      return this.handlers.push(handler);
    };

    Channel.prototype.remove = function(handler) {
      var _handler;
      return this.handlers = (function() {
        var _i, _len, _ref, _results;
        _ref = this.handlers;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          _handler = _ref[_i];
          if (_handler !== handler) {
            _results.push(_handler);
          }
        }
        return _results;
      }).call(this);
    };

    Channel.prototype.forward = function(channel) {
      return this.receive((function(_this) {
        return function(message) {
          return channel.fire(message);
        };
      })(this));
    };

    Channel.prototype.source = function(block) {
      var channel;
      channel = new this.constructor;
      channel.forward(this);
      if (block != null) {
        block(channel);
      }
      return channel;
    };

    Channel.prototype["package"] = function(message) {
      return message;
    };

    return Channel;

  })();

  module.exports = Channel;

}).call(this);
