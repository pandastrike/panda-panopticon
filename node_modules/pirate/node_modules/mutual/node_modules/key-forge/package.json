{
  "name": "key-forge",
  "version": "0.1.3",
  "description": "A simple random key generator for use with Node.",
  "main": "lib/index.js",
  "scripts": {
    "prepublish": "coffee -o lib/ -c src/*.coffee",
    "test": "coffee src/test.coffee"
  },
  "bin": {
    "key-forge": "bin/key-forge"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pandastrike/key-forge.git"
  },
  "keywords": [
    "key",
    "random",
    "bytes",
    "generate"
  ],
  "author": {
    "name": "Dan Yoder"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "b7fc37fec30296c2203e791ecf379b19787b3b8e",
  "devDependencies": {
    "coffee-script": "~1.6.3",
    "testify": "~0.2.7"
  },
  "readme": "Key Forge\n=========\n\nA simple key generation library for use with Node. More or less a convenience wrapper around Node's Crypto and Buffer libraries.\n\n## Install\n\n    npm install key-forge\n\n## Usage\n\nAlthough Key Forge has a number of functions that you can use to fine-tune your key generation, mostly what you want is this:\n\n    {randomKey} = require \"key-forge\"\n    keySize = 16 # bytes\n    key = randomKey keySize # defaults to hex encoding\n    key = randomKey keySize, \"hex\"\n    key = randomKey keySize, \"base64\"\n    key = randomKey keySize, \"base64url\"\n\n\n## Notes on Encodings\n\n* \"hex\": direct output from Node.js Buffer.toString(\"hex\")\n\n* \"base64\": output from Buffer.toString(\"base64\") with the \"=\" padding stripped.\n\n* \"base64url\": Based on http://tools.ietf.org/html/rfc4648#section-5, with padding stripped.\n\n",
  "bugs": {
    "url": "https://github.com/pandastrike/key-forge/issues"
  },
  "homepage": "https://github.com/pandastrike/key-forge",
  "_id": "key-forge@0.1.3",
  "_shasum": "eed00adedc29780935f24eaf411098856b95de6f",
  "_from": "key-forge@~0.1.3",
  "_resolved": "https://registry.npmjs.org/key-forge/-/key-forge-0.1.3.tgz"
}
