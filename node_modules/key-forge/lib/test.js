// Generated by CoffeeScript 1.6.3
(function() {
  var Keys, Testify, assert;

  Keys = require("./index");

  Testify = require("testify");

  assert = require("assert");

  Testify.test("Key generation", function(context) {
    var z;
    context.test("randomKey returns a string", function() {
      return assert.ok((Keys.randomKey(16)).charAt);
    });
    context.test("bytesToNumber is the inverse of numberToBytes", function() {
      var x;
      x = Date.now();
      assert.ok(Keys.bytesToNumber(Keys.numberToBytes(x)), x);
      x = 17;
      return assert.equal(Keys.bytesToNumber(Keys.numberToBytes(x)), x);
    });
    context.test("numberToKey returns a string", function() {
      return assert.ok((Keys.numberToKey(Date.now())).charAt);
    });
    z = Keys.buffersToKey(Keys.randomBytes(16), Keys.numberToBytes(Date.now()));
    context.test("we can combine byte arrays to create composite keys", function() {
      return assert.ok(z.charAt);
    });
    return context.test("Encoding for hex works as expected", function() {
      return assert.equal(z, (new Buffer(z, 'hex')).toString('hex'));
    });
  });

}).call(this);
