// Generated by CoffeeScript 1.6.3
module.exports = {
  divisibleBy: function(value, context) {
    var _this = this;
    return function(data, runtime) {
      if (_this.test_type("number", data)) {
        if (!((data / value) % 1 === 0)) {
          return runtime.error(context);
        }
      }
    };
  },
  minimum: function(value, context) {
    var exclusiveMinimum,
      _this = this;
    exclusiveMinimum = context.modifiers.exclusiveMinimum;
    if (exclusiveMinimum) {
      return function(data, runtime) {
        if (_this.test_type("number", data)) {
          if (!(data > value)) {
            return runtime.error(context);
          }
        }
      };
    } else {
      return function(data, runtime) {
        if (_this.test_type("number", data)) {
          if (!(data >= value)) {
            return runtime.error(context);
          }
        }
      };
    }
  },
  maximum: function(value, context) {
    var exclusiveMaximum,
      _this = this;
    exclusiveMaximum = context.modifiers.exclusiveMaximum;
    if (exclusiveMaximum) {
      return function(data, runtime) {
        if (_this.test_type("number", data)) {
          if (!(data < value)) {
            return runtime.error(context);
          }
        }
      };
    } else {
      return function(data, runtime) {
        if (_this.test_type("number", data)) {
          if (!(data <= value)) {
            return runtime.error(context);
          }
        }
      };
    }
  }
};
